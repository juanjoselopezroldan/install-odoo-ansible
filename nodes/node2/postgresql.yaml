---
  - hosts: node2
    become: yes
    vars_files:
      - ../../vars/vars_node2.yaml
    tasks:
      - name: Update repositories and packages of Debian
        apt:
          update_cache: yes
          upgrade: yes
        tags:
          - update

      - name: Add key for to install postgresql
        apt_key:
          url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
          state: present

      - name: Add repository of postgresql
        apt_repository:
          repo: deb http://apt.postgresql.org/pub/repos/apt/ {{ debian_version }}-pgdg main
          state: present
          update_cache: yes
        tags:
          - add_repository_postgres

      - name: Install postgres 10 and psycopg2
        apt:
          name: "{{packages}}"
        vars: 
          packages:
          - sudo
          - python-psycopg2
          - postgresql-10
          update_cache: yes
        tags:
          - install_postgresql_10_and_psycopg2

      - name: Add user postgresql to file of sudoers
        shell: "echo 'postgres   ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers"
        tags:
          - add_user_to_sudoers

      - name: Create of user fot Postgresql
        become: yes
        become_user: postgres
        postgresql_user:
          name: "{{ user }}"
          password: "{{ passwd }}"
          role_attr_flags: CREATEDB

      - name: Create database for Postgresql
        become: yes
        become_user: postgres
        postgresql_db:
          name: "{{ db }}"
          owner: "{{ user }}" 
          encoding: UTF-8
          lc_collate: es_ES.UTF-8
          lc_ctype: es_ES.UTF-8
          template: template0

      - name: Assing privileges user for database
        become: yes
        become_user: postgres
        postgresql_privs:
          db: "{{ db }}"
          role: "{{ user }}"
          objs: ALL_IN_SCHEMA
          privs: ALL

      - name: Enable access remote
        replace:
          path: "{{ file_postgresql_conf }}"
          regexp: "^#listen_addresses = 'localhost'"
          replace: "listen_addresses = '*'"
          backup: yes
        tags:
          - enable_access_remote

      - name: Enable accept requests of all nodes
        replace:
          path: "{{ file_pg_hba }}"
          regexp: '^host    all             all             127.0.0.1/32            md5'
          replace: 'host    all             all             all            md5'
          backup: yes
        tags:
          - enable_accept_requests_of_all_nodes

      - name: Restart service of postgres for to apply changes
        systemd:
          name: postgresql
          state: restarted
        tags:
          - restart_service_postgresql
